const express = require('express');
const router = express.Router();
const { 
    createRating,
    // updateRating,
    deleteRating,
    getMovieRatings,
    toggleLike,        // âš¡ NEW: Toggle like API
    likeMovie,         // Legacy
    unlikeMovie,       // Legacy
    addComment,
    getComments,
    deleteUserComment,
    // Star Rating Functions (NEW)
    addStarRating,
    getUserStarRating,
    getMovieStarRatings,
    deleteStarRating,
    getAllMoviesRatingStats
} = require('../controllers/rating.controller');

// PUBLIC
router.get('/movie/:movie_id', getMovieRatings);

// PROTECTED - cáº§n userId
// ThÃªm Ä‘Ã¡nh giÃ¡ má»›i (userId tá»« body)
router.post('/', createRating);

// Cáº­p nháº­t Ä‘Ã¡nh giÃ¡
// router.put('/:id', updateRating);

// XÃ³a Ä‘Ã¡nh giÃ¡ (userId tá»« body)
router.delete('/:id', deleteRating);

// ==============================================
// NEW UNIFIED INTERACTION APIS
// ==============================================

// âš¡ NEW: Toggle like/unlike in one API (RESTful)
router.put('/movies/:movie_id/like', toggleLike);

// ==============================================
// STAR RATING APIS (NEW)
// ==============================================

// ThÃªm/cáº­p nháº­t Ä‘Ã¡nh giÃ¡ sao cho phim
router.post('/movies/:movie_id/stars', addStarRating);
router.put('/movies/:movie_id/stars', addStarRating); // CÃ¹ng function Ä‘á»ƒ há»— trá»£ cáº£ POST vÃ  PUT

// Láº¥y Ä‘Ã¡nh giÃ¡ sao cá»§a user cho má»™t phim
router.get('/movies/:movie_id/stars/user', getUserStarRating);

// Láº¥y thá»‘ng kÃª vÃ  danh sÃ¡ch Ä‘Ã¡nh giÃ¡ sao cá»§a má»™t phim
router.get('/movies/:movie_id/stars', getMovieStarRatings);

// XÃ³a Ä‘Ã¡nh giÃ¡ sao cá»§a user
router.delete('/movies/:movie_id/stars', deleteStarRating);

// Láº¥y thá»‘ng kÃª rating cá»§a táº¥t cáº£ phim (cho admin)
router.get('/stats/all-movies', getAllMoviesRatingStats);

// ==============================================
// LEGACY ROUTES (for backward compatibility)
// ==============================================

// Legacy like routes (userId tá»« body)
router.post('/movies/:movie_id/like', likeMovie);
router.delete('/movies/:movie_id/like', unlikeMovie); // Backward compatibility
router.post('/movies/:movie_id/unlike', unlikeMovie); // ðŸ†• FIX: Add correct POST endpoint for unlike

// UNIFIED comment routes (userId tá»« body)
router.post('/movies/:movie_id/comment', addComment);    // Add/Update comment (unified)
router.get('/movies/:movie_id/comments', getComments);   // Get comments with pagination & sorting
router.delete('/movies/:movie_id/comment', deleteUserComment); // Delete comment

module.exports = router; 